<?xml version="1.0" encoding="UTF-8"?>
<Group id="{% set id = '{:0=8}'.format(range(0, 99999999) | random) %}{{ attributes['id'] or id }}" type="tree" >
    {% if 'type' not in attributes  %}
        {% set tree_data = dict({
    'id': 'root',
    'name': 'Root Node',
    'children': [
        {
            'id': 'node1',
            'name': 'Node 1',
            'children': [
                {'id': 'node1_1', 'name': 'Node 1.1', 'children': []},
                {'id': 'node1_2', 'name': 'Node 1.2', 'children': []}
            ]
        },
        {
            'id': 'node2',
            'name': 'Node 2',
            'children': [
                {'id': 'node2_1', 'name': 'Node 2.1', 'children': []}
            ]
        }
    ]
}) %}
    {% else  %}
        {% set another = dict({'tag':'#'}) %}
    {% endif  %}

    {% macro render_node(node) %}
        {% if node['children'] and node['children']|length != 0 %}
        <Group id="{{ node['id'] }}" type="node" name="{{ node['name'] }}">
            {{node.name}}
 
            {% if node['children'] and node['children']|length != 0 %}
                {% for child in node['children'] %}
                    {{ render_node(child) }}
                {% endfor %}
            {% endif %}
        </Group>
        {% else %}
            <Text id="ss" draggable="window" draggable-type="window" >{{node.name}}</Text>
        {% endif %}
    {% endmacro %}

    {{ render_node(tree_data) }}
</Group>